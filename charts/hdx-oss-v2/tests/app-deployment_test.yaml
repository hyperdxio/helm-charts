suite: Test HyperDX App Deployment
templates:
  - hyperdx-deployment.yaml
tests:
  - it: should render the app deployment correctly
    set:
      hyperdx:
        image:
          repository: hyperdx/hyperdx
          tag: 2-beta
        apiKey: test-api-key
        appPort: 3000
        apiPort: 8000
        replicas: 1
      mongodb:
        port: 27017
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.spec.containers[0].image
          value: hyperdx/hyperdx:2-beta
      - matchRegex:
          path: metadata.name
          pattern: -app$
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: app-port
            containerPort: 3000
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: api-port
            containerPort: 8000
  
  - it: should scale replicas when specified
    set:
      hyperdx:
        image:
          repository: hyperdx/hyperdx
          tag: 2-beta
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should set topology spread constraints when specified
    set:
      hyperdx:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                foo: bar
    asserts:
      - contains:
          path: spec.template.spec.topologySpreadConstraints
          content:
            maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                foo: bar

  - it: should set priority class name when specified
    set:
      hyperdx:
        priorityClassName: system-node-critical
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: system-node-critical

  - it: should set container resources when specified
    set:
      hyperdx:
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value:
            limits:
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
