suite: Test Default Environment Variables
templates:
  - hyperdx-deployment.yaml
tests:
  - it: should add DEFAULT_CONNECTIONS env var when configured with secrets
    set:
      hyperdx:
        env:
          - name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: hyperdx-connections
                key: connections-json
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: hyperdx-connections
                key: connections-json

  - it: should add DEFAULT_SOURCES env var when configured with plain value
    set:
      hyperdx:
        env:
          - name: DEFAULT_SOURCES
            value: '[{"name":"HyperDX Logs","kind":"log","connection":"Local ClickHouse"}]'
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            value: '[{"name":"HyperDX Logs","kind":"log","connection":"Local ClickHouse"}]'

  - it: should add DEFAULT_SOURCES env var when configured with secrets
    set:
      hyperdx:
        env:
          - name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: hyperdx-sources
                key: sources-json
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: hyperdx-sources
                key: sources-json

  - it: should add both DEFAULT_CONNECTIONS and DEFAULT_SOURCES when configured
    set:
      hyperdx:
        env:
          - name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: hyperdx-connections
                key: connections-json
          - name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: hyperdx-sources
                key: sources-json
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: hyperdx-connections
                key: connections-json
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: hyperdx-sources
                key: sources-json

  - it: should not include DEFAULT_CONNECTIONS or DEFAULT_SOURCES when not configured
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES

  - it: should work with multiline JSON value for DEFAULT_SOURCES
    set:
      hyperdx:
        env:
          - name: DEFAULT_SOURCES
            value: |
              [
                {
                  "name": "HyperDX Logs",
                  "kind": "log",
                  "connection": "Local ClickHouse",
                  "from": {
                    "databaseName": "default",
                    "tableName": "logs"
                  }
                }
              ]
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            value: |
              [
                {
                  "name": "HyperDX Logs",
                  "kind": "log",
                  "connection": "Local ClickHouse",
                  "from": {
                    "databaseName": "default",
                    "tableName": "logs"
                  }
                }
              ]