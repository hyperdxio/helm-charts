suite: Test HyperDX Deployment
templates:
  - hyperdx-deployment.yaml
tests:
  - it: should render deployment correctly with default values
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^docker\.hyperdx\.io/hyperdx/hyperdx:\d+\.\d+\.\d+$
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3000
      - equal:
          path: spec.template.spec.containers[0].ports[1].containerPort
          value: 8000
      - equal:
          path: spec.template.spec.containers[0].ports[2].containerPort
          value: 4320
      - isSubset:
          path: spec.template.spec.containers[0].envFrom[0]
          content:
            configMapRef:
              name: RELEASE-NAME-hdx-oss-v2-app-config
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HYPERDX_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: RELEASE-NAME-hdx-oss-v2-app-secrets

  - it: should set custom replicas when provided
    set:
      hyperdx:
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should add custom annotations when provided
    set:
      hyperdx:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "3000"
    asserts:
      - isSubset:
          path: spec.template.metadata.annotations
          content:
            prometheus.io/scrape: "true"
            prometheus.io/port: "3000"
            
  - it: should add custom labels when provided
    set:
      hyperdx:
        labels:
          environment: production
          team: platform
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            environment: production
            team: platform
            
  - it: should add custom environment variables when provided
    set:
      hyperdx:
        env:
          - name: CUSTOM_ENV
            value: "test-value"
          - name: ANOTHER_ENV
            value: "another-value"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CUSTOM_ENV
            value: "test-value"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ANOTHER_ENV
            value: "another-value"

  - it: should expose OpAMP container port with default values
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[2].containerPort
          value: 4320
      - equal:
          path: spec.template.spec.containers[0].ports[2].name
          value: opamp-port
  
  - it: should use custom OpAMP port when provided
    set:
      hyperdx:
        opampPort: 5320
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[2].containerPort
          value: 5320
  - it: should include initContainers when mongodb.enabled is true
    set:
      mongodb:
        enabled: true
    asserts:
      - isNotEmpty:
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-for-mongodb
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: busybox
      - contains:
          path: spec.template.spec.initContainers[0].command
          content: sh
      - contains:
          path: spec.template.spec.initContainers[0].command
          content: -c
      - matchRegex:
          path: spec.template.spec.initContainers[0].command[2]
          pattern: "until nc -z .+-mongodb [0-9]+; do echo waiting for mongodb; sleep 2; done;"