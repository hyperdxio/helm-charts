suite: Test Ingress
templates:
  - ingress.yaml
tests:
  - it: should not render ingress when disabled
    set:
      hyperdx:
        ingress:
          enabled: false
    asserts:
      - hasDocuments:
          count: 0
          
  - it: should render ingress correctly when enabled without TLS
    set:
      hyperdx:
        ingress:
          enabled: true
          host: hyperdx.example.com
          proxyBodySize: 100m
          proxyConnectTimeout: "60"
          proxySendTimeout: "60"
          proxyReadTimeout: "60"
          tls:
            enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: hyperdx.example.com
      # Validate ingress annotations
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/proxy-body-size"]
          value: "100m"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/proxy-connect-timeout"]
          value: "60"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/proxy-read-timeout"]
          value: "60"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/proxy-send-timeout"]
          value: "60"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]
          value: "/$1"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/use-regex"]
          value: "true"
      # Validate chart version format without exact match
      - matchRegex:
          path: metadata.labels["helm.sh/chart"]
          pattern: ^hdx-oss-v2-\d+\.\d+\.\d+$
          
  - it: should render ingress with TLS when enabled
    set:
      hyperdx:
        ingress:
          enabled: true
          host: hyperdx.example.com
          tls:
            enabled: true
            secretName: hyperdx-tls
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: hyperdx.example.com
      - equal:
          path: spec.tls[0].secretName
          value: hyperdx-tls 