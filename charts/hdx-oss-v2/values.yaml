global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClassName: []

hyperdx:
  image: "hyperdx/hyperdx:2-beta"
  apiKey: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
  apiPort: 8000
  appPort: 3000
  appUrl: "http://localhost"
  logLevel: "info"
  usageStatsEnabled: true
  annotations: {}
    # myAnnotation: "myValue"
  labels: {}
    # myLabel: "myValue"
  env: []
    # DEFAULT_CONNECTIONS: Configure via external secrets (contains sensitive credentials)
    # Create your secret first, then reference it:
    # kubectl create secret generic hyperdx-connections \
    #   --from-literal=connections-json='[{"name":"Local ClickHouse","host":"clickhouse:8123","username":"default","password":"default"}]'
    # 
    # Then reference the secret:
    # - name: DEFAULT_CONNECTIONS
    #   valueFrom:
    #     secretKeyRef:
    #       name: hyperdx-connections
    #       key: connections-json
    
    # DEFAULT_SOURCES: Configure via external secrets or plain values
    # For non-sensitive source configurations, you can use plain values:
    # - name: DEFAULT_SOURCES
    #   value: |
    #     [
    #       {
    #         "name": "HyperDX Logs",
    #         "kind": "log",
    #         "connection": "Local ClickHouse",
    #         "from": {
    #           "databaseName": "default",
    #           "tableName": "logs"
    #         },
    #         "timestampValueExpression": "timestamp",
    #         "displayedTimestampValueExpression": "timestamp",
    #         "bodyExpression": "body",
    #         "severityTextExpression": "severity_text",
    #         "serviceNameExpression": "service_name",
    #         "resourceAttributesExpression": "resource",
    #         "traceIdExpression": "trace_id",
    #         "spanIdExpression": "span_id"
    #       }
    #     ]
    #
    # Or use secrets for consistency:
    # - name: DEFAULT_SOURCES
    #   valueFrom:
    #     secretKeyRef:
    #       name: hyperdx-sources  
    #       key: sources-json
    # See https://github.com/hyperdxio/hyperdx/blob/v2/packages/api/docs/auto_provision/AUTO_PROVISION.md
    # for more information on how to configure these values.

  ingress:
    enabled: false
    host: "localhost"  # Production domain
    proxyBodySize: "100m"
    proxyConnectTimeout: "60"
    proxySendTimeout: "60"
    proxyReadTimeout: "60"
    tls:
      enabled: false
      secretName: "hyperdx-tls"
  replicas: 1

mongodb:
  image: "mongo:5.0.14-focal"
  port: 27017

clickhouse:
  image: "clickhouse/clickhouse-server:24-alpine"
  port: 8123
  nativePort: 9000
  enabled: true
  persistence:
    enabled: true
    dataSize: 10Gi
    logSize: 5Gi
  config:
    users:
      appUserPassword: "hyperdx"
      otelUserPassword: "otelcollectorpass"

otel:
  image: "hyperdx/hyperdx-otel-collector:2-beta"
  port: 13133
  nativePort: 24225
  grpcPort: 4317
  httpPort: 4318
  healthPort: 8888
  enabled: true
  # Clickhouse endpoint - defaults to built-in Clickhouse service
  clickhouseEndpoint: ""

persistence:
  mongodb:
    enabled: true
    size: 10Gi

tasks:
  enabled: false
  checkAlerts:
    schedule: "*/1 * * * *"  # Runs every 1 minute
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
